!function(t,e,o){"object"==typeof exports?module.exports=t(e,o):"function"==typeof define&&define.amd?define(()=>t(e,o)):e.Noose=t(e,o)}((function(t,e){"use strict";function o(){}const s=Math.min,r=Math.max,n={classes:{noose:"noose",selected:"selected"},compute:!0,container:"body",ctrl:!0,enabled:!0,mode:"touch",move:o,scroll:10,scrollEdge:10,scrollbar:17,select:"*",shift:!0,start:o,stop:o,style:{border:"1px dotted #000",zIndex:1e3},throttle:200};return class{constructor(o,l){const c=this;if("object"!=typeof o||null==o||o instanceof HTMLElement||(l=o,o=null),l=c.opts=Object.assign({},n,l),("string"==typeof o||o instanceof HTMLElement)&&(l.container=o),l.container instanceof HTMLElement)c.containers=[l.container];else{if("string"!=typeof l.container)throw new Error("Invalid container option");c.containers=e.querySelectorAll(l.container)}c.coors={pointer:{},noose:{},container:{}};const i=c.noose=e.createElement("div");i.style.position="absolute",i.style.zIndex=l.style.zIndex,i.style.border=l.style.border,l.classes.noose&&i.classList.add(l.classes.noose);let a=!1,d=!1;return c._onStart=function(e){const o=e.currentTarget===c.currentTarget;if(l.enabled&&(!a||!o)&&("mousedown"!==e.type||1===e.which)){a=!0;const n=c.currentTarget=e.currentTarget,d=c.coors.container,u=c.coors.pointer,p=c.coors.noose,y=t.getComputedStyle(n);"static"===y.position&&console.warn("Container is not a positioned element. This may cause issues positioning the noose and/or selecting elements."),l.scroll>0&&l.scrollEdge>0?(d.scrollX=("auto"===y.overflowX||"scroll"===y.overflowX)&&n.scrollHeight>n.clientHeight,d.scrollY=("auto"===y.overflowY||"scroll"===y.overflowY)&&n.scrollWidth>n.clientWidth):(d.scrollX=!1,d.scrollY=!1),d.maxScrollY=d.scrollY&&n.scrollHeight-n.clientHeight||0,d.maxScrollX=d.scrollX&&n.scrollWidth-n.clientWidth||0;const h=u.start,f=u.end;if(u.start=null,p.start=null,c.updateContainerPosition().updatePointerPosition(e),l.scrollbar&&(d.scrollX&&u.end.x>d.x+d.w-l.scrollbar||d.scrollY&&u.end.y>d.y+d.h-l.scrollbar))return a=!1,u.start=h,void(u.end=f);if(l.shift&&o&&e.shiftKey&&h){const t=p.top,e=p.bottom,o=Math.floor((h.x+f.x)/2),n=Math.floor((h.y+f.y)/2);p.start={},u.start.x>=o&&u.start.y<n?(u.start.x=s(h.x,f.x),u.start.y=r(h.y,f.y),p.start.x=t.x,p.start.y=e.y):u.start.x<o&&u.start.y<=n?(u.start.x=r(h.x,f.x),u.start.y=r(h.y,f.y),p.start=e):u.start.x<=o&&u.start.y>n?(u.start.x=r(h.x,f.x),u.start.y=s(h.y,f.y),p.start.x=e.x,p.start.y=t.y):u.start.x>o&&u.start.y>=n&&(u.start.x=s(h.x,f.x),u.start.y=s(h.y,f.y),p.start=t)}if(l.ctrl&&o&&e.ctrlKey?c.lastSelection=c.selected||[]:c.lastSelection=[],i.style.display="none",!1===l.start.apply(c,[e,c.coors]))return a=!1,u.start=h,void(u.end=f);n.appendChild(i)}},c._onMove=function(t){if(l.enabled&&a&&t.currentTarget===c.currentTarget){t.cancelable&&t.preventDefault(),"scroll"!==t.type&&c.updatePointerPosition(t),c.updateContainerPosition().updateNoosePosition();let e=c.coors.noose.top,o=c.coors.noose.bottom;i.style.left=e.x,i.style.top=e.y,i.style.width=o.x-e.x,i.style.height=o.y-e.y,i.style.display="block";let s=c.currentTarget,r=c.coors.container,n=c.coors.pointer.end;r.scrollY&&n.y-r.y<l.scrollEdge?s.scrollTop-=l.scroll:r.scrollY&&s.scrollTop<r.maxScrollY&&r.y+r.h-n.y<l.scrollEdge?s.scrollTop+=l.scroll:r.scrollX&&n.x-r.x<l.scrollEdge?s.scrollLeft-=l.scroll:r.scrollX&&s.scrollLeft<r.maxScrollX&&r.x+r.w-n.x<l.scrollEdge&&(s.scrollLeft+=l.scroll),l.compute&&(l.throttle?d||(d=!0,setTimeout((function(){d&&c.compute()&&l.move.apply(c,[t,c.coors,c.selected]),d=!1}),l.throttle)):(c.compute(),l.move.apply(c,[t,c.coors,c.selected])))}},c._onEnd=function(t){c.opts.enabled&&a&&("mouseup"!==t.type||1===t.which)&&(a=!1,t.currentTarget===c.currentTarget&&(c.updateContainerPosition().updatePointerPosition(t).updateNoosePosition(),d=!1,l.compute&&c.compute(!0),setTimeout((function(){l.stop.apply(c,[t,c.coors,c.selected])}),0),c.currentTarget.removeChild(i)))},Array.prototype.forEach.call(c.containers,(function(t){t.addEventListener("mousedown",c._onStart),t.addEventListener("touchstart",c._onStart,!1),t.addEventListener("mousemove",c._onMove),t.addEventListener("touchmove",c._onMove,!1),t.addEventListener("scroll",c._onMove),t.addEventListener("mouseup",c._onEnd),t.addEventListener("touchend",c._onEnd,!1),t.noose=c})),c}destroy(){const t=this;return t.containers.forEach((function(e){e.removeEventListener("mousedown",t._onStart),e.removeEventListener("touchstart",t._onStart),e.removeEventListener("mousemove",t._onMove),e.removeEventListener("touchmove",t._onMove),e.removeEventListener("scroll",t._onMove),e.removeEventListener("mouseup",t._onEnd),e.removeEventListener("touchend",t._onEnd),delete e.noose})),t.noose.remove(),t.noose=null,t}updateContainerPosition(){const e=this.coors.container,o=this.currentTarget.getBoundingClientRect();return e.x=o.left+t.pageXOffset,e.y=o.top+t.pageYOffset,e.w=o.width,e.h=o.height,this}updatePointerPosition(t){const e=t&&t.touches&&t.touches[0]||t,o=this.coors.pointer;return e&&"number"==typeof e.pageX&&(o.end={x:e.pageX,y:e.pageY},o.start||(o.start=o.end)),this}updateNoosePosition(){const t=this.currentTarget,e=this.coors.pointer.end,o=this.coors.container,n=this.coors.noose,l=r(e.x-o.x+t.scrollLeft,0),c=r(e.y-o.y+t.scrollTop,0);return n.start||(n.start={x:l,y:c}),n.top={x:s(n.start.x,l),y:s(n.start.y,c)},n.bottom={x:s(r(n.start.x,l),t.scrollWidth),y:s(r(n.start.y,c),t.scrollHeight)},this}compute(){const e=this;if(e.opts.select){const o=e.opts.classes.selected,s=e.currentTarget,r=s.querySelectorAll(e.opts.select),n=e.coors.noose.top,l=e.coors.noose.bottom,c=e.coors.container.x,i=e.coors.container.y;e.selected=[],Array.prototype.forEach.call(r,(function(r){if(r===e.noose)return;let a;const d=r.getBoundingClientRect(),u=d.left+t.pageXOffset-c+s.scrollLeft,p=d.top+t.pageYOffset-i+s.scrollTop,y=d.width+u,h=d.height+p;a="fit"===e.opts.mode?n.x<=u&&n.y<=p&&l.x>=y&&l.y>=h:!(n.x>y||n.y>h||l.x<u||l.y<p);const f=e.lastSelection.indexOf(r);a&&-1===f||!a&&-1!==f?(o&&r.classList.add(o),e.selected.push(r)):o&&r.classList.remove(o)}))}return e}static get version(){return"1.2.0"}}}),window,document);
//# sourceMappingURL=noose.js.map
